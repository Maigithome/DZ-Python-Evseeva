# 11.	Сформировать список из  N членов последовательности.
# Для N = 5: 1, -3, 9, -27, 81 и т.д.

# n = int(input("Введите число:"))
# List = [(-3)**i for i in range(n)]
# print(List)

# или

# N = int(input('Введите число:'))
# start = 1
# for i in range(1, N+1):
#     print(start, end=' ')
#     start *= -3

# или

# N = int(input('Введите число:'))
# for i in range(N):
#     print((-3)**i, end=' ')

# Пользователь вводит время в секундах. 
# Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс. 
# Используйте форматирование строк.


sec = int(input('Введите время в секундах: '))
hours = 0
minutes = 0
seconds = 0

hours = (sec // 60) // 60
minutes = sec // 60 - hours * 60
seconds = sec % 100 - minutes * 60

print(f'{hours} : {minutes} : {seconds}')


# или
# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс. 
# Используйте форматирование строк. 3661
import datetime
sec = 3661
minute = sec % 60
sec1 = minute % 60
hour = int(sec/3600)  # 1 hour
timeobj = datetime.time(hour, minute, sec1)
print(timeobj)

# или

my_time = int(input('Введите время в секундах'))

hours = my_time//3600
minutes = (my_time % 3600) // 60
seconds = my_time % 60

print(f'{hours}:{minutes}:{seconds}')



# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3.
# Считаем 3 + 33 + 333 = 369.

number = input('Введите целое число: ')
number2 = number * 2
number3 = number * 3

print(f'{number} + {number2} + {number3} = {int(number) + int(number2) + int(number3)}')

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
n = int(input("Введите число N: "))
a = n*11
b = n*111
c = n+a+b
print(f'{n}+{a}+{b}={c}')

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. 
# Для решения используйте цикл while и арифметические операции.
a = int(input("Введите число: "))
maxNumber = 0
while a > 0:
    b = a % 10
    if b > maxNumber:
        maxNumber = b
        if maxNumber == 9:
            break
    a //= 10

print(maxNumber)

# 5. Запросите у пользователя значения выручки и издержек фирмы. 
# Определите, с каким финансовым результатом работает фирма. 
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. 
# Выведите соответствующее сообщение.

# a = int(input("Введите значения выручки: "))
# b = int(input("Введите значения издержек фирмы: "))
# if a > b:
#     print("Прибыль")
# elif a == b:
#     print("Работа в 0")
# else: print("Убыток")

# 6. Если фирма отработала с прибылью, вычислите рентабельность выручки. 
# Это отношение прибыли к выручке. 
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.

a = int(input("Введите значения выручки: "))
b = int(input("Введите значения издержек фирмы: "))
if a > b:
    print(f"Прибыль составила = {a-b}, рентабельность составила {(a-b)/a}")
    c = int(input("Введите кол-во сотрудников: "))
    print(f"Прибыль фирмы на одного сотрудника составила: {(a-b)/c}")
else: print("Убыток")


# 7. Спортсмен занимается ежедневными пробежками.
# В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на шестой день спортсмен достиг результата — не менее 3 км.

a = int(input("Введите кол-во километров в первый день: "))
b = int(input("Введите максимальное значение киллометров: "))
day = 1
while a < b:
    a *= 1.1
    day += 1
    print(f'На {day}-й день спортсмен достиг результата - {round(a,2)} киллометров')
